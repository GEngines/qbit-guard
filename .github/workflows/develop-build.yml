name: Build & Publish Development Docker Image

on:
  # Automatically build on pushes to develop branch
  push:
    branches: [ develop ]
    paths:
      - "Dockerfile"
      - "src/**"
      - ".github/workflows/develop-build.yml"
  # Also allow manual runs
  workflow_dispatch:
    inputs:
      extra_tag:
        description: "Optional extra tag to publish (e.g. 1.0.0-beta1)"
        required: false
        type: string

permissions:
  contents: write
  packages: write

concurrency:
  group: docker-dev-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: qbit-guard
  CURRENT_DATE: '2025-08-31'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version_info.outputs.new_version }}
      new_tag: ${{ steps.version_info.outputs.new_tag }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Increment version and create dev tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          CUSTOM_TAG: dev-${{ github.run_number }}
      
      - name: Set version output
        id: version_info
        run: |
          TAG="${{ steps.tag_version.outputs.new_tag }}-dev"
          VERSION="${{ steps.tag_version.outputs.new_version }}-dev"
          
          echo "new_tag=$TAG" >> $GITHUB_OUTPUT
          echo "new_version=$VERSION" >> $GITHUB_OUTPUT
          
  docker:
    runs-on: ubuntu-latest
    needs: [version]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute registry image name
        id: names
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE="${OWNER_LC}/${{ env.IMAGE_NAME }}"
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/${IMAGE}" >> $GITHUB_OUTPUT

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set build version
        id: build_args
        run: |
          VERSION="${{ needs.version.outputs.new_version }}"
          if [[ "$VERSION" == v* ]]; then
            VERSION="${VERSION:1}"
          fi
          echo "build_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.names.outputs.image }}
          tags: |
            type=raw,value=dev
            type=raw,value=${{ needs.version.outputs.new_version }}
            type=ref,event=branch
            type=sha

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_VERSION=${{ steps.build_args.outputs.build_version }}

      - name: Push extra tag (from workflow_dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.extra_tag != '' }}
        run: |
          SRC="${{ steps.names.outputs.image }}:$(echo '${{ steps.meta.outputs.tags }}' | tr ',' '\n' | head -n1 | xargs)"
          TGT="${{ steps.names.outputs.image }}:${{ inputs.extra_tag }}"
          echo "Retagging $SRC -> $TGT"
          docker buildx imagetools create -t "$TGT" "$SRC"