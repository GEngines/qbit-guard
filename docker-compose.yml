version: '3.8'

services:
  qbit-guard:
    image: ghcr.io/gengines/qbit-guard:latest
    container_name: qbit-guard
    restart: unless-stopped
    environment:
      # ===== LOGGING =====
      - LOG_LEVEL=INFO                                   # DEBUG, INFO, WARNING, ERROR

      # ===== qBITTORRENT SETTINGS =====
      - QBIT_HOST=http://qbittorrent:8080                # qBittorrent WebUI URL
      - QBIT_USER=admin                                  # qBittorrent username
      - QBIT_PASS=adminadmin                             # qBittorrent password
      - QBIT_ALLOWED_CATEGORIES=tv-sonarr,radarr         # Comma-separated categories to process
      - QBIT_IGNORE_TLS=0                                # Ignore TLS cert errors (0=false, 1=true)
      - QBIT_DRY_RUN=0                                   # Dry run mode - no actual changes (0=false, 1=true)
      - QBIT_DELETE_FILES=true                           # Delete files when removing torrents (true/false)
      - USER_AGENT=qbit-guard/2.0                        # User agent for HTTP requests

      # ===== PRE-AIR CHECK (SONARR/RADARR) =====
      - ENABLE_PREAIR_CHECK=1                            # Enable pre-air blocking (0=false, 1=true)
      - EARLY_GRACE_HOURS=6                              # Hours before air to allow early releases
      - EARLY_HARD_LIMIT_HOURS=72                        # Hard limit - block if more than X hours early
      - WHITELIST_OVERRIDES_HARD_LIMIT=0                 # Allow whitelisted to override hard limit (0=false, 1=true)
      - EARLY_WHITELIST_GROUPS=                          # Comma-separated release groups to whitelist
      - EARLY_WHITELIST_INDEXERS=                        # Comma-separated indexers to whitelist
      - EARLY_WHITELIST_TRACKERS=                        # Comma-separated tracker domains to whitelist
      - RESUME_IF_NO_HISTORY=1                           # Proceed if no Sonarr history found (0=false, 1=true)
      
      # ======= SONARR SETTINGS ======
      - SONARR_URL=http://sonarr:8989                    # Sonarr URL
      - SONARR_APIKEY=your_sonarr_api_key_here      		 # Sonarr API key
      - SONARR_CATEGORIES=tv-sonarr                      # Categories for Sonarr pre-air check
      - SONARR_TIMEOUT_SEC=45                        		 # Sonarr API timeout in seconds
      - SONARR_RETRIES=3                                 # Number of retries for Sonarr API calls

      # ===== RADARR SETTINGS =====
      - RADARR_URL=http://radarr:7878                    # Radarr URL
      - RADARR_APIKEY=your_radarr_api_key_here           # Radarr API key
      - RADARR_CATEGORIES=radarr                         # Categories for Radarr processing
      - RADARR_TIMEOUT_SEC=45                            # Radarr API timeout in seconds
      - RADARR_RETRIES=3                                 # Number of retries for Radarr API calls

      # ===== INTERNET CROSS-VERIFICATION =====
      - INTERNET_CHECK_PROVIDER=tvmaze                   # off, tvmaze, tvdb, both
      
      # TVMaze settings
      - TVMAZE_BASE=https://api.tvmaze.com               # TVMaze API base URL
      - TVMAZE_TIMEOUT_SEC=8                             # TVMaze API timeout
      
      # TVDB settings
      - TVDB_BASE=https://api4.thetvdb.com/v4            # TVDB API base URL
      - TVDB_APIKEY=                                     # TVDB API key (required for TVDB)
      - TVDB_PIN=                                        # TVDB PIN (optional)
      - TVDB_LANGUAGE=eng                                # TVDB language code
      - TVDB_ORDER=default                               # Episode ordering: default or official
      - TVDB_TIMEOUT_SEC=8                               # TVDB API timeout
      - TVDB_BEARER=                                     # Pre-authenticated TVDB bearer token (optional)

      # ===== ISO/BDMV CLEANUP =====
      - ENABLE_ISO_CHECK=1                               # Enable ISO/BDMV detection and cleanup (0=false, 1=true)
      - MIN_KEEPABLE_VIDEO_MB=50                         # Minimum video file size to keep (MB)
      
      # ===== METADATA FETCHING =====
      - METADATA_POLL_INTERVAL=1.5                       # Seconds between metadata checks
      - METADATA_MAX_WAIT_SEC=0                          # Max seconds to wait for metadata (0=unlimited)
      - METADATA_DOWNLOAD_BUDGET_BYTES=0                 # Max bytes to download during metadata fetch (0=unlimited)

      
    networks:
      - arr-network
    
    # For webhook mode (uncomment if using webhooks)
    # ports:
    #   - "8080:8080"

  # Example qBittorrent service (for reference)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent:/config
      - ./downloads:/downloads
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped
    networks:
      - arr-network

  # Example Sonarr service (for reference)
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./sonarr:/config
      - ./downloads:/downloads
      - ./tv:/tv
    ports:
      - "8989:8989"
    restart: unless-stopped
    networks:
      - arr-network

  # Example Radarr service (for reference)
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./radarr:/config
      - ./downloads:/downloads
      - ./movies:/movies
    ports:
      - "7878:7878"
    restart: unless-stopped
    networks:
      - arr-network

networks:
  arr-network:
    driver: bridge
