{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"qbit-guard","text":"<p>A zero-dependency Python guard for qBittorrent that provides intelligent torrent management with pre-air checking and ISO/BDMV cleanup.</p> <p>Install \u2192 \u00b7 Configure \u2192 \u00b7 Environment Vars \u2192 \u00b7 Development \u2192</p>"},{"location":"#features","title":"Features","text":"<ul> <li> <p>Pre-air gate (Sonarr)   Stops new TV torrents, checks <code>airDateUtc</code> with configurable grace/cap windows, supports release group / indexer / tracker whitelisting, and blocks too-early releases.</p> </li> <li> <p>ISO/BDMV cleaner   After metadata arrives, removes disc-image-only torrents (ISO/IMG/MDF/NRG/CUE/BIN files or <code>BDMV</code> / <code>VIDEO_TS</code> folders) that don\u2019t contain keepable video.</p> </li> <li> <p>Smart blocklisting   Blocklists in Sonarr/Radarr before deletion using deduped history (single \u201cgrabbed\u201d record per unique release), with queue failover if the history endpoint times out.</p> </li> <li> <p>Optional internet cross-verification   TVmaze and/or TheTVDB to cross-check Sonarr air dates.</p> </li> <li> <p>qBittorrent 5.x &amp; 4.x   Uses start/stop with resume/pause fallback for 4.x.</p> </li> <li> <p>Zero deps &amp; container-friendly   Pure Python 3.8+ stdlib; configured by environment variables; logs to stdout.</p> </li> </ul>"},{"location":"#how-it-works-flow","title":"How it works (flow)","text":"<ol> <li>On add \u2192 torrent immediately stopped and tagged <code>guard:stopped</code>.  </li> <li>Category filter \u2192 only <code>QBIT_ALLOWED_CATEGORIES</code> are processed.  </li> <li>Pre-air gate (if Sonarr category): consult Sonarr (+ optional TVmaze/TVDB).  </li> <li>If blocked \u2192 blocklist in *arr, tag <code>trash:preair</code>, delete torrent.  </li> <li>If allowed \u2192 continue.  </li> <li>Metadata fetch \u2192 briefly start torrent to get file list (magnet-friendly), reannounce periodically, respect wait/budget limits, then stop.  </li> <li>ISO/BDMV cleanup \u2192 if disc-image-only and no keepable video \u2265 <code>MIN_KEEPABLE_VIDEO_MB</code>, blocklist + delete (tag <code>trash:iso</code>).  </li> <li>Start for real \u2192 tag <code>guard:allowed</code> and start torrent.</li> </ol> <p>Keepable video: <code>.mkv .mp4 .m4v .avi .ts .m2ts .mov .webm</code> (size \u2265 threshold).</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>qBittorrent 5.x preferred (4.x supported).</li> <li>Python 3.8+ (if running as a script).</li> <li>Sonarr v3 (optional; for pre-air).</li> <li>Radarr v3 (optional; used for ISO deletes).</li> <li>Network connectivity between qBittorrent and *arr.</li> <li>No external Python deps.</li> </ul>"},{"location":"#quick-start-docker-compose","title":"Quick start (Docker Compose)","text":"<p>```yaml version: '3.8' services:   qbit-guard:     image: ghcr.io/gengines/qbit-guard:1.0.0     container_name: qbit-guard     restart: unless-stopped     environment:       - QBIT_HOST=http://qbittorrent:8080       - QBIT_USER=admin       - QBIT_PASS=your_password       - QBIT_ALLOWED_CATEGORIES=tv-sonarr,radarr       - ENABLE_PREAIR_CHECK=1       - SONARR_URL=http://sonarr:8989       - SONARR_APIKEY=your_api_key       - ENABLE_ISO_CHECK=1       - LOG_LEVEL=INFO     networks: [arr-network]</p> <p>networks:   arr-network: { driver: bridge }</p>"},{"location":"usage/configure/","title":"Configure","text":""},{"location":"usage/configure/#configure","title":"Configure","text":""},{"location":"usage/dev/","title":"Development","text":""},{"location":"usage/dev/#development","title":"Development","text":""},{"location":"usage/env/","title":"Environment Variables","text":""},{"location":"usage/install/","title":"Install","text":"<p>qbit-guard can run as a container service (recommended) or as a standalone script.</p> <ul> <li>Configure options: see configure.md </li> <li>Full list of variables: see env.md</li> </ul>"},{"location":"usage/install/#docker-recommended","title":"Docker (recommended)","text":""},{"location":"usage/install/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker + Docker Compose</li> <li>qBittorrent, Sonarr/Radarr reachable over the network</li> </ul>"},{"location":"usage/install/#1-pull-the-image","title":"1) Pull the image","text":"<p>```bash docker pull ghcr.io/gengines/qbit-guard:1.0.0</p>"}]}